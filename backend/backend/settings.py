"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
from django.utils import timezone
from django.conf import settings

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


if os.name == 'nt': 
        GDAL_LIBRARY_PATH = 'C:\\OSGeo4W\\bin\\gdal310.dll' 
        GEOS_LIBRARY_PATH = 'C:\\OSGeo4W\\bin\\geos_c.dll'
        PROJ_LIB = 'C:\\OSGeo4W\\share\\proj' 

        if os.environ.get('GDAL_LIBRARY_PATH') is None:
            os.environ['GDAL_LIBRARY_PATH'] = GDAL_LIBRARY_PATH
        if os.environ.get('GEOS_LIBRARY_PATH') is None:
            os.environ['GEOS_LIBRARY_PATH'] = GEOS_LIBRARY_PATH
        if os.environ.get('PROJ_LIB') is None:
            os.environ['PROJ_LIB'] = PROJ_LIB



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-_(-@r$8($)y%uwsnbrz%*%q-u2c%41@5e*)!tdfiu8m@)j7!mr"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['192.168.84.217', '10.3.227.189', '10.3.225.166', '192.168.0.123', '127.0.0.1', 'localhost', '10.3.224.3']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.gis",
    # Third-party
    "rest_framework",
    "rest_framework_simplejwt",
    "drf_yasg",
    "corsheaders",
    "django_filters",
    # Local
    "core",
    "rest_framework_gis",
    "django_extensions",
    "mapwidgets",
    "leaflet",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "backend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "backend.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.contrib.gis.db.backends.postgis",
        "NAME": "runquest_db",
        "USER": "postgres",
        "PASSWORD": "1",
        "HOST": "localhost",
        "PORT": "5432",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "ru-ru"

TIME_ZONE = "Asia/Krasnoyarsk"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"
STATIC_ROOT = BASE_DIR / "static"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# CORS
CORS_ALLOW_ALL_ORIGINS = True

# DRF
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
    ],
}

# Simple JWT settings (basic configuration)
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timezone.timedelta(minutes=5),
    'REFRESH_TOKEN_LIFETIME': timezone.timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'JWK_URL': None,
    'LEEWAY': 0,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_LIFETIME': timezone.timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timezone.timedelta(days=1),
}

# Swagger settings
SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    },
    'USE_SESSION_AUTH': False,
    'JSON_EDITOR': True,
}

# Настройки django-leaflet
LEAFLET_CONFIG = {
    'TILES': [
        ('OpenStreetMap', 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {'attribution': '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'}),
        # Добавляем слой 2GIS.
        # ('2GIS', 'L.DGis', {'attribution': '© 2GIS', 'apiKey': '26d7dd40-e06c-44e9-973a-bf69bfc149f4'}), # !!! Вставьте ваш API ключ 2ГИС здесь !!!
    ],
    'DEFAULT_CENTER': (56.012, 92.867), # Центр по умолчанию (Красноярск, район, похожий на скриншот)
    'DEFAULT_ZOOM': 14,
    'MIN_ZOOM': 3,
    'MAX_ZOOM': 18,
    'DEFAULT_PRECISION': 6,
    'SPOT_COLOR': '#44aa00',
    'FULLSCREEN': True,
    'MINIMAP': False, # Временно отключаем MiniMap из-за ошибки
    'RESET_VIEW': True,
    'ATTRIBUTION_PREFIX': '',
    'PLUGINS': {
        'forms': {
            'auto-include': True,
        },
        # Добавляем 2GIS плагин и API
        # 'leaflet-2gis': {
        #     'js': [
        #         'leaflet/2gis/mapgl.js', # Укажите правильный путь и имя файла API
        #         'leaflet/2gis/leaflet-2gis.js', # Укажите правильный путь и имя файла плагина
        #     ],
        #     'auto-include': True,
        # },
    },
    'GEOFENCE': False,
}

# Возможно, вам потребуется API ключ Яндекс Карт. Добавьте его здесь:
YANDEX_MAPS_API_KEY = '7a1f1ccf-48e2-4068-a303-e6c5cc01b2e2' # Оставляем ключ, возможно понадобится позже

STATICFILES_DIRS = [
    # BASE_DIR / 'static', # Убедитесь, что ваша статическая директория здесь
    # ... другие директории, если есть
]

STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'
