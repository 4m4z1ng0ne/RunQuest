## Актуальный план разработки бэкенда (на текущий момент)

### Реализовано:

- Аутентификация пользователей (регистрация, вход), обновление профиля, аватар, уровни, опыт, настройки приватности.
- Эндпоинты для управления гоночными трассами (RaceTrackViewSet):
    - Получение списка трасс, деталей, стартовых точек.
    - Расчёт длины трассы, XP, рекордов.
- Эндпоинты для попыток гонки (UserRaceAttemptViewSet):
    - Завершение гонки, публикация результатов, сравнение маршрутов, лидерборд.
- Эндпоинты для тренировок (RunViewSet):
    - Сохранение, публикация, привязка к совместным пробежкам, XP, достижения, челленджи.
- Сериализаторы для всех моделей: RaceTrack, UserRaceAttempt, Run, Achievement, Challenge, UserAchievement, UserChallenge, Friend, ActivityItem, JointRunInvitation, PlannedJointRun, Block, DeviceToken и др.
- Лента активности: ActivityItem, публикация/скрытие, комментарии, просмотр чужих лент с учётом приватности и блокировок.
- Достижения и челленджи: отслеживание прогресса, выдача, просмотр, секретные достижения, фильтрация.
- Друзья: запросы, принятие/отклонение, удаление, отмена, список друзей, статус дружбы, фильтрация.
- Совместные пробежки: приглашения, статусы, планирование, добавление участников, старт, отмена, уведомления о событиях (но не push).
- Блокировки: модель Block, действия block/unblock, автоматическое удаление дружбы и отмена приглашений при блокировке.
- Поиск пользователей: фильтрация, исключение заблокированных, учёт публичности.
- DeviceToken: хранение токенов устройств для push-уведомлений (логика отправки не реализована).
- Права доступа, фильтрация, пагинация, базовая обработка ошибок.
- Миграции отражают развитие моделей и функционала.

### Частично реализовано/требует доработки:

- Расширенная аналитика и статистика: реализована базовая статистика (суммарные пробежки, XP, достижения), но нет расширенных отчётов по типам, периодам, графиков и т.д.
- Логика расчёта калорий: поле есть, но формула/алгоритм не реализованы.
- Логика приватности: реализована для профиля, активности, друзей, но требует тестирования и доработки для сложных кейсов.

### Не реализовано:

- Push-уведомления: нет интеграции с внешними сервисами и логики отправки push-уведомлений.
- Документирование API (Swagger/OpenAPI): отсутствует.
- Тесты для API: файл tests.py пустой, тесты не реализованы.
- Оптимизация запросов к базе данных: нет явных оптимизаций (select_related, prefetch_related используются мало).
- Взаимодействие с администратором по контенту гонок: нет отдельной логики модерации или специфических эндпоинтов для админов.

### Текущий статус соответствия дипломной работе:

Бэкенд реализует все основные сущности и бизнес-логику, описанные в дипломе: User, Profile, Achievement, Challenge, Run, RaceTrack, Block, Friend, ActivityItem, JointRunInvitation, PlannedJointRun и др. Реализованы все основные сценарии пользователя: регистрация, аутентификация, управление профилем, друзья, достижения, челленджи, гонки, тренировки, совместные пробежки, блокировки, лента активности.

Однако, для полного соответствия и повышения качества проекта требуется:
- Реализовать push-уведомления (интеграция и логика отправки).
- Доработать аналитику и статистику (расширенные отчёты, графики, фильтры).
- Реализовать расчёт калорий.
- Добавить тесты и документацию API.
- Оптимизировать запросы к БД.
- (Опционально) реализовать модерацию контента гонок и взаимодействие с администратором. 